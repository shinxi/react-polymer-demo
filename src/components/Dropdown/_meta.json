{
  "description":
    "This element provides a dropdown from which users can select one or more values.\n\nIt can also be used in conjunction with px-validation, similar to px-forms-design, to apply validation states - simply add the `validation-error`, `validation-warning`, and `validation-success` classes to alter the border color of the component.\n\n### Usage\n\nSimple:\n```\n<px-dropdown items='[\"One\",\"Two\"]'></px-dropdown>\n<px-dropdown items='[{\"key\":\"one\", \"val\": \"One\"}, {\"key\":\"two\", \"val\": \"Two\"}]'></px-dropdown>\n```\n\nComplex:\n```\n<px-dropdown items='[{\"key\":\"one\", \"val\": \"One\", \"selected\": \"true\"}]'\n             display-value=\"Click me\"\n             prevent-close-on-outside-click=\"true\"\n             allow-outside-scroll=\"true\"\n             multi=\"true\"\n             select-by=\"key\"\n             selected-values='[\"1\",\"3\"]'\n             bound-target=\".parentDiv\"\n             search-mode=\"true\"\n             sort-mode=\"val\">\n</px-dropdown>\n```\n\n### Styling\nThe following custom properties are available for styling of the dropdown content.\nSee the documentation for px-buttons-design for variables related to the styling of the invoking button.\n\nCustom property | Description\n:----------------|:-------------\n`--px-dropdown-max-height` | Max height for the dropdown menu container\n`--px-dropdown-max-width` | Max width for the dropdown menu container\n`--px-dropdown-bg-color` | Background color for the dropdown menu container\n`--px-dropdown-bg-color--hover` | Background color of a hovered menu item\n`--px-dropdown-bg-color--selected` | Background color of a selected menu item\n`--px-dropdown-text-color` | Text color of a regular dropdown menu item\n`--px-dropdown-text-color--disabled` | Text color of a disabled dropdown menu item\n`--px-dropdown-text-color--selected` | Text color of a selected dropdown menu item\n`--px-dropdown-icon-size` | Sets the size for the icon on the dropdown trigger\n`--px-dropdown-content-font-size` | Sets the size of the font for the dropdown menu container\n`--px-dropdown-font-weight` | Sets the weight of the font for the dropdown trigger button",
  "summary": "",
  "path": "px-dropdown/px-dropdown.html",
  "properties": [
    {
      "name": "opened",
      "type": "boolean",
      "description": "A flag which reflects if the dropdown trigger has been clicked or not.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 144, "column": 6 }, "end": { "line": 148, "column": 7 } },
      "metadata": { "polymer": { "notify": true } },
      "defaultValue": "false"
    },
    {
      "name": "hover",
      "type": "boolean",
      "description": "A flag which reflects whether the dropdown is being hovered over.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 152, "column": 6 }, "end": { "line": 156, "column": 7 } },
      "metadata": { "polymer": { "notify": true } },
      "defaultValue": "false"
    },
    {
      "name": "focusedItem",
      "type": "Object",
      "description": "Returns the currently focused item in the dropdown list.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 160, "column": 6 }, "end": { "line": 164, "column": 7 } },
      "metadata": { "polymer": { "observer": "\"_focusedItemChanged\"", "readOnly": true } }
    },
    {
      "name": "hideChevron",
      "type": "boolean",
      "description": "Whether or not to hide the chevron icon from the dropdown.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 168, "column": 6 }, "end": { "line": 171, "column": 7 } },
      "metadata": { "polymer": {} },
      "defaultValue": "false"
    },
    {
      "name": "boundTarget",
      "type": "string",
      "description":
        "A CSS selector which specifies the bounding target the dropdown will be\ndisplayed within. Defaults to `window`.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 176, "column": 6 }, "end": { "line": 178, "column": 7 } },
      "metadata": { "polymer": {} }
    },
    {
      "name": "preventCloseOnOutsideClick",
      "type": "boolean",
      "description":
        "Whether the dropdown will close when a user clicks\noutside of it. Set to true to prevent dropdown from closing.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 183, "column": 6 }, "end": { "line": 186, "column": 7 } },
      "metadata": { "polymer": {} },
      "defaultValue": "false"
    },
    {
      "name": "displayValue",
      "type": "string",
      "description":
        "The placeholder text to display in the dropdown. If the\nselected value(s) are cleared out, the displayValue will be\nreplaced in the dropdown.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 192, "column": 6 }, "end": { "line": 197, "column": 7 } },
      "metadata": { "polymer": { "notify": true, "observer": "\"_displayValueChanged\"" } },
      "defaultValue": "\"Select\""
    },
    {
      "name": "disableClear",
      "type": "boolean",
      "description":
        "If set to true, users are unable to clear out the dropdown\nonce a selection has been made. Useful for required single-select\ndropdowns where an empty state would be undesirable. Not recommended\nfor multi-select dropdowns, as it means the user will simply lose the ability\nto quickly deselect all checked options (there is currently no mechanism\nwhich requires a user to select at least one option).",
      "privacy": "public",
      "sourceRange": { "start": { "line": 206, "column": 6 }, "end": { "line": 209, "column": 7 } },
      "metadata": { "polymer": {} },
      "defaultValue": "false"
    },
    {
      "name": "_displayValueSelected",
      "type": "string",
      "description":
        "The text that is displayed in the label of the dropdown.\nUpdated when the selections change.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 214, "column": 6 }, "end": { "line": 216, "column": 7 } },
      "metadata": { "polymer": {} }
    },
    {
      "name": "items",
      "type": "Array",
      "description":
        "An array that contains the list of items which show up in the dropdown.\nEach item can either be a simple string, or an object consisting of:\n* 'key' - a unique identifier (number or string)\n* 'val' - the actual text that is displayed\n* 'disabled' - whether the item should be disabled for selection (optional)\n* 'selected' - whether the item should be selected at instantiation (optional)\n* 'icon' - an icon name from the px-icon-set to display next to the item (optional)\n* 'color' - the color to use for the icon - if not specified, the default text colors will be used (optional)\n\nNote: if you specify more than one item as `selected`, but `multi` is not enabled,\nonly the *first* selected item will be chosen. See also `clearSelectionsOnChange`.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 230, "column": 6 }, "end": { "line": 237, "column": 7 } },
      "metadata": { "polymer": { "notify": true, "observer": "\"_itemsChanged\"" } },
      "defaultValue": "[]"
    },
    {
      "name": "multi",
      "type": "boolean",
      "description":
        "If set to true, multiple values can be selected in the dropdown.\nSelected values are reflected in the `selectedValues` property.\nIf set to false, a single selected value is reflected in `selected`.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 243, "column": 6 }, "end": { "line": 246, "column": 7 } },
      "metadata": { "polymer": {} },
      "defaultValue": "false"
    },
    {
      "name": "selectBy",
      "type": "string",
      "description":
        "Which property of each dropdown item will be used to get/set\nthe selected items - should be one of \"key\" or \"val\".",
      "privacy": "public",
      "sourceRange": { "start": { "line": 251, "column": 6 }, "end": { "line": 255, "column": 7 } },
      "metadata": { "polymer": { "observer": "\"_updateSelection\"" } },
      "defaultValue": "\"key\""
    },
    {
      "name": "selected",
      "type": "string",
      "description":
        "Gets or sets the selected item when `multi` is false.\nWill either be a single key or value based on `selectBy`.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 260, "column": 6 }, "end": { "line": 264, "column": 7 } },
      "metadata": { "polymer": { "notify": true } },
      "defaultValue": "null"
    },
    {
      "name": "selectedValues",
      "type": "Array",
      "description":
        "Gets or sets the selected items when `multi` is true.\nWill either be an array of keys or values based on `selectBy`.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 269, "column": 6 }, "end": { "line": 275, "column": 7 } },
      "metadata": { "polymer": { "notify": true } },
      "defaultValue": "[]"
    },
    {
      "name": "selectedItems",
      "type": "Array",
      "description": "A read-only array of the selected `<div>` elements in the dropdown.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 279, "column": 6 }, "end": { "line": 285, "column": 7 } },
      "metadata": { "polymer": { "readOnly": true } },
      "defaultValue": "[]"
    },
    {
      "name": "allowOutsideScroll",
      "type": "boolean",
      "description":
        "By default, the dropdown will constrain scrolling on the page to\nitself when opened. Set to true in order to allow scrolling of\nthe page while the dropdown is open.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 291, "column": 6 }, "end": { "line": 294, "column": 7 } },
      "metadata": { "polymer": {} },
      "defaultValue": "false"
    },
    {
      "name": "buttonStyle",
      "type": "string",
      "description":
        "Style for the button that invokes the dropdown.\nOne of 'default','bare','bare--primary', 'tertiary', or 'icon'.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 299, "column": 6 }, "end": { "line": 302, "column": 7 } },
      "metadata": { "polymer": {} },
      "defaultValue": "\"default\""
    },
    {
      "name": "disabled",
      "type": "boolean",
      "description": "Whether the dropdown should be disabled and non-interactive.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 306, "column": 6 }, "end": { "line": 309, "column": 7 } },
      "metadata": { "polymer": {} },
      "defaultValue": "false"
    },
    {
      "name": "searchMode",
      "type": "boolean",
      "description":
        "If true, the dropdown will include a search box, whereby the\ndropdown items can be filtered with a search term.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 314, "column": 6 }, "end": { "line": 317, "column": 7 } },
      "metadata": { "polymer": {} },
      "defaultValue": "false"
    },
    {
      "name": "searchTerm",
      "type": "string",
      "description":
        "The value of the search box, used for filtering the dropdown\nitems when searchMode is true.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 322, "column": 6 }, "end": { "line": 326, "column": 7 } },
      "metadata": { "polymer": { "observer": "\"_computeFilter\"" } },
      "defaultValue": "\"\""
    },
    {
      "name": "sortMode",
      "type": "string",
      "description":
        "What to sort the dropdown items by - one of \"key\" or \"val\".\nBy default, the items will be displayed in the order they are\npassed into the component.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 332, "column": 6 }, "end": { "line": 334, "column": 7 } },
      "metadata": { "polymer": {} }
    },
    {
      "name": "hideSelected",
      "type": "boolean",
      "description":
        "If set to true, the display-value will always show up in the\ninvoking button of the dropdown. Useful in cases like the\npx-data-table, where \"Show/Hide Columns\" should always appear.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 340, "column": 6 }, "end": { "line": 343, "column": 7 } },
      "metadata": { "polymer": {} },
      "defaultValue": "false"
    },
    {
      "name": "icon",
      "type": "string",
      "description":
        "If buttonStyle is set to 'icon' this property will dictate\nwhich icon will be displayed inside of the dropdown button.\nThe `displayValue`, selected values, and chevron will not be displayed.\nPerfect for icon-invoked menus. The value of this property should\nbe a valid px-icon name, e.g. 'px-utl:app-settings'",
      "privacy": "public",
      "sourceRange": { "start": { "line": 351, "column": 6 }, "end": { "line": 354, "column": 7 } },
      "metadata": { "polymer": {} },
      "defaultValue": "\"\""
    },
    {
      "name": "clearSelectionsOnChange",
      "type": "boolean",
      "description":
        "Set this property if you would like the `selected` and `selectedValues`\nproperties to be cleared whenever mutations are made to the `items` array.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 359, "column": 6 }, "end": { "line": 362, "column": 7 } },
      "metadata": { "polymer": {} },
      "defaultValue": "false"
    },
    {
      "name": "_keyBindingsTarget",
      "type": "Object",
      "description": "Binding target for iron-a11y-keys",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 366, "column": 6 }, "end": { "line": 371, "column": 7 } },
      "metadata": { "polymer": {} }
    },
    {
      "name": "_focusedOption",
      "type": "HTMLElement",
      "description":
        "The currently \"focused\" option in the dropdown list.\nUsed for handling of keyboard events.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 376, "column": 6 }, "end": { "line": 378, "column": 7 } },
      "metadata": { "polymer": {} }
    },
    {
      "name": "_keyboardBeingUsed",
      "type": "boolean",
      "description":
        "Used to capture if the user is using the keyboard to interact with the dropdown.\nUsed to disable all mouse events.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 383, "column": 6 }, "end": { "line": 386, "column": 7 } },
      "metadata": { "polymer": {} },
      "defaultValue": "false"
    }
  ],
  "methods": [
    {
      "name": "toggle",
      "description": "Opens the dropdown when the button is pressed.",
      "privacy": "public",
      "sourceRange": { "start": { "line": 399, "column": 4 }, "end": { "line": 402, "column": 5 } },
      "metadata": {},
      "params": []
    },
    {
      "name": "_clear",
      "description": "Clears all of the selections when the clear button is pressed.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 406, "column": 4 }, "end": { "line": 416, "column": 5 } },
      "metadata": {},
      "params": [{ "name": "evt" }]
    },
    {
      "name": "attached",
      "description": "Forces the width of the dropdown to be at least as wide as the button.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 420, "column": 4 }, "end": { "line": 423, "column": 5 } },
      "metadata": {},
      "params": []
    },
    {
      "name": "_isEqual",
      "description": "Calculates if two things are equal.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 427, "column": 4 }, "end": { "line": 429, "column": 5 } },
      "metadata": {},
      "params": [{ "name": "a" }, { "name": "b" }]
    },
    {
      "name": "_getDisabledClass",
      "description": "Calculates the class for a disabled dropdown.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 433, "column": 4 }, "end": { "line": 435, "column": 5 } },
      "metadata": {},
      "params": []
    },
    {
      "name": "_getClass",
      "description": "Calculates the class for a bare dropdown.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 439, "column": 4 }, "end": { "line": 445, "column": 5 } },
      "metadata": {},
      "params": []
    },
    {
      "name": "_getElement",
      "description": "Searches the DOM for the `boundTarget` element.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 449, "column": 4 }, "end": { "line": 451, "column": 5 } },
      "metadata": {},
      "params": [{ "name": "target" }]
    },
    {
      "name": "_displayValueChanged",
      "description": "When `displayValue` update `_displayValueSelected`",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 455, "column": 4 }, "end": { "line": 457, "column": 5 } },
      "metadata": {},
      "params": []
    },
    {
      "name": "_itemsChanged",
      "description":
        "Any time that `items` changes, this method will convert an array\nof simple strings to an array of objects.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 462, "column": 4 }, "end": { "line": 475, "column": 5 } },
      "metadata": {},
      "params": [{ "name": "items" }]
    },
    {
      "name": "_updateSelection",
      "description":
        "Iterates over the `items` array and adds items with the\n`selected` property to the `selectedValues` array (for multi) or\nupdates `selected` (for single). Note: if you specify more than\none item as `selected` but `multi` is not enabled, only the *first*\nselected item will be chosen. Does NOT remove items if their selected\nproperty gets changed to false or removed - use `clearSelectionsOnChange`\nor mutate the `selected` / `selectedValues` properties instead.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 485, "column": 4 }, "end": { "line": 515, "column": 5 } },
      "metadata": {},
      "params": []
    },
    {
      "name": "_handleActivate",
      "description":
        "When iron-activate is fired, this method checks whether the item is disabled.\nIf so, it cancels the event so that iron-select is not called.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 520, "column": 4 }, "end": { "line": 530, "column": 5 } },
      "metadata": {},
      "params": [{ "name": "evt" }]
    },
    {
      "name": "_handleSelection",
      "description":
        "Handles the selection event from iron-selector to update\nthe label displayed inside the dropdown.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 535, "column": 4 }, "end": { "line": 562, "column": 5 } },
      "metadata": {},
      "params": [{ "name": "evt" }]
    },
    {
      "name": "_handleDeselection",
      "description":
        "Handles the de-selection event from iron-selector to update\nthe label displayed inside the dropdown.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 567, "column": 4 }, "end": { "line": 593, "column": 5 } },
      "metadata": {},
      "params": [{ "name": "evt" }]
    },
    {
      "name": "_notifyResize",
      "description": "Resizes the dropdown when the search term is changed.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 597, "column": 4 }, "end": { "line": 599, "column": 5 } },
      "metadata": {},
      "params": []
    },
    {
      "name": "_computeFilter",
      "description":
        "Filter function used by the dom-repeat inside the iron-selector,\nbased on the searchTerm entered in the search box.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 604, "column": 4 }, "end": { "line": 614, "column": 5 } },
      "metadata": {},
      "params": []
    },
    {
      "name": "_showClearButton",
      "description": "Determines whether to display the clear button inside the dropdown.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 618, "column": 4 }, "end": { "line": 631, "column": 5 } },
      "metadata": {},
      "params": [
        { "name": "disableClear" },
        { "name": "buttonStyle" },
        { "name": "opened" },
        { "name": "selected" },
        { "name": "selectedValues" }
      ]
    },
    {
      "name": "_showChevron",
      "description": "Determines whether to display the chevron button inside the dropdown.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 635, "column": 4 }, "end": { "line": 649, "column": 5 } },
      "metadata": {},
      "params": [
        { "name": "disableClear" },
        { "name": "hideChevron" },
        { "name": "buttonStyle" },
        { "name": "opened" },
        { "name": "selected" },
        { "name": "selectedValues" }
      ]
    },
    {
      "name": "_initSort",
      "description": "Initializes the sort function for the dom-repeat inside of iron-selector.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 653, "column": 4 }, "end": { "line": 656, "column": 5 } },
      "metadata": {},
      "params": []
    },
    {
      "name": "_bindMouse",
      "description":
        "Event handler for mouse move event. We enable mouse events when user moves the mouse.\nMouse events are disabled when user uses the keyboard to interact with the dropdown.",
      "privacy": "private",
      "sourceRange": { "start": { "line": 662, "column": 4 }, "end": { "line": 666, "column": 5 } },
      "metadata": {},
      "params": []
    },
    {
      "name": "_computeSort",
      "description":
        "The sort function used by the dom-repeat inside of iron-selector to\nsort the items by either 'key' or 'val' based on `sortMode`.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 671, "column": 4 }, "end": { "line": 695, "column": 5 } },
      "metadata": {},
      "params": [{ "name": "a" }, { "name": "b" }]
    },
    {
      "name": "_setFocusedOption",
      "description": "Adds or removes the focused class for keyboard navigation.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 699, "column": 4 }, "end": { "line": 707, "column": 5 } },
      "metadata": {},
      "params": [{ "name": "newOption" }, { "name": "oldOption" }]
    },
    {
      "name": "_handleKeyPress",
      "description": "Keypress event handler for iron-a11y-keys.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 711, "column": 4 }, "end": { "line": 796, "column": 5 } },
      "metadata": {},
      "params": [{ "name": "event" }]
    },
    {
      "name": "_hoverOn",
      "description": "Event handler when the mouse hovers over a dropdown list item.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 800, "column": 4 }, "end": { "line": 808, "column": 5 } },
      "metadata": {},
      "params": [{ "name": "event" }]
    },
    {
      "name": "_hoverOff",
      "description": "Event handler when the mouse hovers out of a dropdown list item.",
      "privacy": "protected",
      "sourceRange": { "start": { "line": 812, "column": 4 }, "end": { "line": 814, "column": 5 } },
      "metadata": {},
      "params": [{ "name": "event" }]
    }
  ],
  "staticMethods": [],
  "demos": [{ "url": "index.html", "description": "" }],
  "metadata": {},
  "sourceRange": { "start": { "line": 135, "column": 10 }, "end": { "line": 815, "column": 3 } },
  "privacy": "public",
  "superclass": "HTMLElement",
  "attributes": [
    {
      "name": "opened",
      "description": "A flag which reflects if the dropdown trigger has been clicked or not.",
      "sourceRange": { "start": { "line": 144, "column": 6 }, "end": { "line": 148, "column": 7 } },
      "metadata": {},
      "type": "boolean"
    },
    {
      "name": "hover",
      "description": "A flag which reflects whether the dropdown is being hovered over.",
      "sourceRange": { "start": { "line": 152, "column": 6 }, "end": { "line": 156, "column": 7 } },
      "metadata": {},
      "type": "boolean"
    },
    {
      "name": "focused-item",
      "description": "Returns the currently focused item in the dropdown list.",
      "sourceRange": { "start": { "line": 160, "column": 6 }, "end": { "line": 164, "column": 7 } },
      "metadata": {},
      "type": "Object"
    },
    {
      "name": "hide-chevron",
      "description": "Whether or not to hide the chevron icon from the dropdown.",
      "sourceRange": { "start": { "line": 168, "column": 6 }, "end": { "line": 171, "column": 7 } },
      "metadata": {},
      "type": "boolean"
    },
    {
      "name": "bound-target",
      "description":
        "A CSS selector which specifies the bounding target the dropdown will be\ndisplayed within. Defaults to `window`.",
      "sourceRange": { "start": { "line": 176, "column": 6 }, "end": { "line": 178, "column": 7 } },
      "metadata": {},
      "type": "string"
    },
    {
      "name": "prevent-close-on-outside-click",
      "description":
        "Whether the dropdown will close when a user clicks\noutside of it. Set to true to prevent dropdown from closing.",
      "sourceRange": { "start": { "line": 183, "column": 6 }, "end": { "line": 186, "column": 7 } },
      "metadata": {},
      "type": "boolean"
    },
    {
      "name": "display-value",
      "description":
        "The placeholder text to display in the dropdown. If the\nselected value(s) are cleared out, the displayValue will be\nreplaced in the dropdown.",
      "sourceRange": { "start": { "line": 192, "column": 6 }, "end": { "line": 197, "column": 7 } },
      "metadata": {},
      "type": "string"
    },
    {
      "name": "disable-clear",
      "description":
        "If set to true, users are unable to clear out the dropdown\nonce a selection has been made. Useful for required single-select\ndropdowns where an empty state would be undesirable. Not recommended\nfor multi-select dropdowns, as it means the user will simply lose the ability\nto quickly deselect all checked options (there is currently no mechanism\nwhich requires a user to select at least one option).",
      "sourceRange": { "start": { "line": 206, "column": 6 }, "end": { "line": 209, "column": 7 } },
      "metadata": {},
      "type": "boolean"
    },
    {
      "name": "items",
      "description":
        "An array that contains the list of items which show up in the dropdown.\nEach item can either be a simple string, or an object consisting of:\n* 'key' - a unique identifier (number or string)\n* 'val' - the actual text that is displayed\n* 'disabled' - whether the item should be disabled for selection (optional)\n* 'selected' - whether the item should be selected at instantiation (optional)\n* 'icon' - an icon name from the px-icon-set to display next to the item (optional)\n* 'color' - the color to use for the icon - if not specified, the default text colors will be used (optional)\n\nNote: if you specify more than one item as `selected`, but `multi` is not enabled,\nonly the *first* selected item will be chosen. See also `clearSelectionsOnChange`.",
      "sourceRange": { "start": { "line": 230, "column": 6 }, "end": { "line": 237, "column": 7 } },
      "metadata": {},
      "type": "Array"
    },
    {
      "name": "multi",
      "description":
        "If set to true, multiple values can be selected in the dropdown.\nSelected values are reflected in the `selectedValues` property.\nIf set to false, a single selected value is reflected in `selected`.",
      "sourceRange": { "start": { "line": 243, "column": 6 }, "end": { "line": 246, "column": 7 } },
      "metadata": {},
      "type": "boolean"
    },
    {
      "name": "select-by",
      "description":
        "Which property of each dropdown item will be used to get/set\nthe selected items - should be one of \"key\" or \"val\".",
      "sourceRange": { "start": { "line": 251, "column": 6 }, "end": { "line": 255, "column": 7 } },
      "metadata": {},
      "type": "string"
    },
    {
      "name": "selected",
      "description":
        "Gets or sets the selected item when `multi` is false.\nWill either be a single key or value based on `selectBy`.",
      "sourceRange": { "start": { "line": 260, "column": 6 }, "end": { "line": 264, "column": 7 } },
      "metadata": {},
      "type": "string"
    },
    {
      "name": "selected-values",
      "description":
        "Gets or sets the selected items when `multi` is true.\nWill either be an array of keys or values based on `selectBy`.",
      "sourceRange": { "start": { "line": 269, "column": 6 }, "end": { "line": 275, "column": 7 } },
      "metadata": {},
      "type": "Array"
    },
    {
      "name": "selected-items",
      "description": "A read-only array of the selected `<div>` elements in the dropdown.",
      "sourceRange": { "start": { "line": 279, "column": 6 }, "end": { "line": 285, "column": 7 } },
      "metadata": {},
      "type": "Array"
    },
    {
      "name": "allow-outside-scroll",
      "description":
        "By default, the dropdown will constrain scrolling on the page to\nitself when opened. Set to true in order to allow scrolling of\nthe page while the dropdown is open.",
      "sourceRange": { "start": { "line": 291, "column": 6 }, "end": { "line": 294, "column": 7 } },
      "metadata": {},
      "type": "boolean"
    },
    {
      "name": "button-style",
      "description":
        "Style for the button that invokes the dropdown.\nOne of 'default','bare','bare--primary', 'tertiary', or 'icon'.",
      "sourceRange": { "start": { "line": 299, "column": 6 }, "end": { "line": 302, "column": 7 } },
      "metadata": {},
      "type": "string"
    },
    {
      "name": "disabled",
      "description": "Whether the dropdown should be disabled and non-interactive.",
      "sourceRange": { "start": { "line": 306, "column": 6 }, "end": { "line": 309, "column": 7 } },
      "metadata": {},
      "type": "boolean"
    },
    {
      "name": "search-mode",
      "description":
        "If true, the dropdown will include a search box, whereby the\ndropdown items can be filtered with a search term.",
      "sourceRange": { "start": { "line": 314, "column": 6 }, "end": { "line": 317, "column": 7 } },
      "metadata": {},
      "type": "boolean"
    },
    {
      "name": "search-term",
      "description":
        "The value of the search box, used for filtering the dropdown\nitems when searchMode is true.",
      "sourceRange": { "start": { "line": 322, "column": 6 }, "end": { "line": 326, "column": 7 } },
      "metadata": {},
      "type": "string"
    },
    {
      "name": "sort-mode",
      "description":
        "What to sort the dropdown items by - one of \"key\" or \"val\".\nBy default, the items will be displayed in the order they are\npassed into the component.",
      "sourceRange": { "start": { "line": 332, "column": 6 }, "end": { "line": 334, "column": 7 } },
      "metadata": {},
      "type": "string"
    },
    {
      "name": "hide-selected",
      "description":
        "If set to true, the display-value will always show up in the\ninvoking button of the dropdown. Useful in cases like the\npx-data-table, where \"Show/Hide Columns\" should always appear.",
      "sourceRange": { "start": { "line": 340, "column": 6 }, "end": { "line": 343, "column": 7 } },
      "metadata": {},
      "type": "boolean"
    },
    {
      "name": "icon",
      "description":
        "If buttonStyle is set to 'icon' this property will dictate\nwhich icon will be displayed inside of the dropdown button.\nThe `displayValue`, selected values, and chevron will not be displayed.\nPerfect for icon-invoked menus. The value of this property should\nbe a valid px-icon name, e.g. 'px-utl:app-settings'",
      "sourceRange": { "start": { "line": 351, "column": 6 }, "end": { "line": 354, "column": 7 } },
      "metadata": {},
      "type": "string"
    },
    {
      "name": "clear-selections-on-change",
      "description":
        "Set this property if you would like the `selected` and `selectedValues`\nproperties to be cleared whenever mutations are made to the `items` array.",
      "sourceRange": { "start": { "line": 359, "column": 6 }, "end": { "line": 362, "column": 7 } },
      "metadata": {},
      "type": "boolean"
    }
  ],
  "events": [
    {
      "type": "CustomEvent",
      "name": "px-dropdown-click",
      "description": "px-dropdown-click",
      "metadata": {}
    },
    {
      "type": "CustomEvent",
      "name": "px-dropdown-selection-changed",
      "description": "px-dropdown-selection-changed",
      "metadata": {}
    },
    {
      "type": "CustomEvent",
      "name": "opened-changed",
      "description": "Fired when the `opened` property changes.",
      "metadata": {}
    },
    {
      "type": "CustomEvent",
      "name": "hover-changed",
      "description": "Fired when the `hover` property changes.",
      "metadata": {}
    },
    {
      "type": "CustomEvent",
      "name": "display-value-changed",
      "description": "Fired when the `displayValue` property changes.",
      "metadata": {}
    },
    {
      "type": "CustomEvent",
      "name": "items-changed",
      "description": "Fired when the `items` property changes.",
      "metadata": {}
    },
    {
      "type": "CustomEvent",
      "name": "selected-changed",
      "description": "Fired when the `selected` property changes.",
      "metadata": {}
    },
    {
      "type": "CustomEvent",
      "name": "selected-values-changed",
      "description": "Fired when the `selectedValues` property changes.",
      "metadata": {}
    }
  ],
  "styling": { "cssVariables": [], "selectors": [] },
  "slots": [],
  "tagname": "px-dropdown"
}
